#pragma once

/* Bank 0 */
#define ICM_0_DEVICE_CONFIG			0x11
#define ICM_0_DRIVE_CONFIG			0x13
#define ICM_0_INT_CONFIG			0x14
#define ICM_0_FIFO_CONFIG			0x16
#define ICM_0_TEMP_DATA1			0x1D
#define ICM_0_TEMP_DATA0			0x1E
#define ICM_0_ACCEL_DATA_X1			0x1F
#define ICM_0_ACCEL_DATA_X0			0x20
#define ICM_0_ACCEL_DATA_Y1			0x21
#define ICM_0_ACCEL_DATA_Y0			0x22
#define ICM_0_ACCEL_DATA_Z1			0x23
#define ICM_0_ACCEL_DATA_Z0			0x24
#define ICM_0_GYRO_DATA_X1			0x25
#define ICM_0_GYRO_DATA_X0			0x26
#define ICM_0_GYRO_DATA_Y1			0x27
#define ICM_0_GYRO_DATA_Y0			0x28
#define ICM_0_GYRO_DATA_Z1			0x29
#define ICM_0_GYRO_DATA_Z0			0x2A
#define ICM_0_TMST_FSYNCH			0x2D
#define ICM_0_TMST_FSYNCL			0x2C
#define ICM_0_INT_STATUS			0x2D
#define ICM_0_FIFO_COUNTH			0x2E
#define ICM_0_FIFO_COUNTL			0x2F
#define ICM_0_FIFO_DATA				0x30
#define ICM_0_APEX_DATA0			0x31
#define ICM_0_APEX_DATA1			0x32
#define ICM_0_APEX_DATA2			0x33
#define ICM_0_APEX_DATA3			0x34
#define ICM_0_APEX_DATA4			0x35
#define ICM_0_APEX_DATA5			0x36
#define ICM_0_INT_STATUS2			0x37
#define ICM_0_INT_STATUS3			0x38
#define ICM_0_SIGNAL_PATH_RESET		0x4B
#define ICM_0_INTF_CONFIG0			0x4C
#define ICM_0_INTF_CONFIG1			0x4D
#define ICM_0_PWR_MGMT0				0x4E
#define ICM_0_GYRO_CONFIG0			0x4F
#define ICM_0_ACCEL_CONFIG0			0x50
#define ICM_0_GYRO_CONFIG1			0x51
#define ICM_0_GYRO_ACCEL_CONFIG0	0x52
#define ICM_0_ACCEL_CONFIG1			0x53
#define ICM_0_TMST_CONFIG			0x54
#define ICM_0_APEX_CONFIG0			0x56
#define ICM_0_SMD_CONFIG			0x57
#define ICM_0_FIFO_CONFIG1			0x5F
#define ICM_0_FIFO_CONFIG2			0x60
#define ICM_0_FIFO_CONFIG3			0x61
#define ICM_0_FSYNC_CONFIG			0x62
#define ICM_0_INT_CONFIG0			0x63
#define ICM_0_INT_CONFIG1			0x64
#define ICM_0_INT_SOURCE0			0x65
#define ICM_0_INT_SOURCE1			0x66
#define ICM_0_INT_SOURCE3			0x68
#define ICM_0_INT_SOURCE4			0x69
#define ICM_0_FIFO_LOST_PKT0		0x6C
#define ICM_0_FIFO_LOST_PKT1		0x6D
#define ICM_0_SELF_TEST_CONFIG		0x70
#define ICM_0_WHO_AM_I				0x75
#define ICM_0_REG_BANK_SEL			0x76
/* Bank 1 */
#define ICM_1_SENSOR_CONFIG0		0x03
#define ICM_1_GYRO_CONFIG_STATIC2	0x0B
#define ICM_1_GYRO_CONFIG_STATIC3	0x0C
#define ICM_1_GYRO_CONFIG_STATIC4	0x0D
#define ICM_1_GYRO_CONFIG_STATIC5	0x0E
#define ICM_1_GYRO_CONFIG_STATIC6	0x0F
#define ICM_1_GYRO_CONFIG_STATIC7	0x10
#define ICM_1_GYRO_CONFIG_STATIC8	0x11
#define ICM_1_GYRO_CONFIG_STATIC9	0x12
#define ICM_1_GYRO_CONFIG_STATIC10	0x13
#define ICM_1_XG_ST_DATA			0x5F
#define ICM_1_YG_ST_DATA			0x60
#define ICM_1_ZG_ST_DATA			0x61
#define ICM_1_TMSTVAL0				0x62
#define ICM_1_TMSTVAL1				0x63
#define ICM_1_TMSTVAL2				0x64
#define ICM_1_INTF_CONFIG4			0x7A
#define ICM_1_INTF_CONFIG5			0x7B
#define ICM_1_INTF_CONFIG6			0x7C
/* Bank 2 */
#define ICM_2_ACCEL_CONFIG_STATIC2	0x03
#define ICM_2_ACCEL_CONFIG_STATIC3	0x04
#define ICM_2_ACCEL_CONFIG_STATIC4	0x05
#define ICM_2_XA_ST_DATA			0x3B
#define ICM_2_YA_ST_DATA			0x3C
#define ICM_2_ZA_ST_DATA			0x3D
/* Bank 4 */
#define ICM_4_APEX_CONFIG1			0x40
#define ICM_4_APEX_CONFIG2			0x41
#define ICM_4_APEX_CONFIG3			0x42
#define ICM_4_APEX_CONFIG4			0x43
#define ICM_4_APEX_CONFIG5			0x44
#define ICM_4_APEX_CONFIG6			0x45
#define ICM_4_APEX_CONFIG7			0x46
#define ICM_4_APEX_CONFIG8			0x47
#define ICM_4_APEX_CONFIG9			0x48
#define ICM_4_ACCEL_WOM_X_THR		0x4A
#define ICM_4_ACCEL_WOM_Y_THR		0x4B
#define ICM_4_ACCEL_WOM_Z_THR		0x4C
#define ICM_4_INT_SOURCE6			0x4D
#define ICM_4_INT_SOURCE7			0x4E
#define ICM_4_INT_SOURCE8			0x4F
#define ICM_4_INT_SOURCE9			0x50
#define ICM_4_INT_SOURCE10			0x51
#define ICM_4_OFFSET_USER0			0x77
#define ICM_4_OFFSET_USER1			0x78
#define ICM_4_OFFSET_USER2			0x79
#define ICM_4_OFFSET_USER3			0x7A
#define ICM_4_OFFSET_USER4			0x7B
#define ICM_4_OFFSET_USER5			0x7C
#define ICM_4_OFFSET_USER6			0x7D
#define ICM_4_OFFSET_USER7			0x7E
#define ICM_4_OFFSET_USER8			0x7F

/* DEVICE_CONFIG */
#define ICM_DEVICE_CONFIG_SPI_MODE				4
#define ICM_DEVICE_CONFIG_SOFT_RESET_CONFIG		0
/* DRIVE_CONFIG */
#define ICM_DRIVE_CONFIG_I2C_SLEW_RATE			3
#define ICM_DRIVE_CONFIG_SPI_SLEW_RATE			0
/* INT_CONFIG */
#define ICM_INT_CONFIG_INT2_MODE				5
#define ICM_INT_CONFIG_INT2_DRIVE_CIRCUIT		4
#define ICM_INT_CONFIG_INT2_POLARITY			3
#define ICM_INT_CONFIG_INT1_MODE				2
#define ICM_INT_CONFIG_INT1_DRIVE_CIRCUIT		1
#define ICM_INT_CONFIG_INT1_POLARITY			0
/* FIFO_CONFIG */
#define ICM_FIFO_CONFIG_FIFO_MODE				6
/* INT_STATUS */
#define ICM_INT_STATUS_UI_FSYNC_INT				6
#define ICM_INT_STATUS_PLL_RDY_INT				5
#define ICM_INT_STATUS_RESET_DONE_INT			4
#define ICM_INT_STATUS_DATA_RDY_INT				3
#define ICM_INT_STATUS_FIFO_THS_INT				2
#define ICM_INT_STATUS_FIFO_FULL_INT			1
#define ICM_INT_STATUS_AGC_RDY_INT				0
/* PWR_MGMT0 */
#define ICM_PWR_MGMT0_TEMP_DIS					5
#define ICM_PWR_MGMT0_IDLE						4
#define ICM_PWR_MGMT0_GYRO_MODE1				3
#define ICM_PWR_MGMT0_GYRO_MODE0				2
#define ICM_PWR_MGMT0_GYRO_MODE					2
#define ICM_PWR_MGMT0_ACCEL_MODE1				1
#define ICM_PWR_MGMT0_ACCEL_MODE0				0
#define ICM_PWR_MGMT0_ACCEL_MODE				0
/* GYRO_CONFIG0 */
#define ICM_GYRO_CONFIG0_FS_SEL					5
#define ICM_GYRO_CONFIG0_ODR					0
/* ACCEL_CONFIG0 */
#define ICM_ACCEL_CONFIG0_FS_SEL				5
#define ICM_ACCEL_CONFIG0_ODR					0
/* GYRO_CONFIG1 */
#define ICM_GYRO_CONFIG1_TEMP_FILT_BW			5
#define ICM_GYRO_CONFIG1_UI_FILT_ORD			2
#define ICM_GYRO_CONFIG1_DEC2_M2_ORD			0
/* GYRO_ACCEL_CONFIG0 */
#define ICM_GYRO_ACCEL_CONFIG0_ACCEL_UI_FILT_BW	4
#define ICM_GYRO_ACCEL_CONFIG0_GYRO_UI_FILT_BW	0
/* ACCEL_CONFIG1 */
#define ICM_ACCEL_CONFIG1_UI_FILT_ORD			3
#define ICM_ACCEL_CONFIG1_DEC2_M2_ORD			1
/* TMST_CONFIG */
#define ICM_TMST_CONFIG_TMST_TO_REGS_EN			4
#define ICM_TMST_CONFIG_TMST_RES				3
#define ICM_TMST_CONFIG_TMST_DELTA_EN			2
#define ICM_TMST_CONFIG_TMST_FSYNC_EN			1
#define ICM_TMST_CONFIG_TMST_EN					0
/* APEX_CONFIG0 */
#define ICM_APEX_CONFIG0_DMP_POWER_SAVE			7
#define ICM_APEX_CONFIG0_TAP_ENABLE				6
#define ICM_APEX_CONFIG0_PED_ENABLE				5
#define ICM_APEX_CONFIG0_TILT_ENABLE			4
#define ICM_APEX_CONFIG0_R2W_ENABLE				3
#define ICM_APEX_CONFIG0_DMP_ODR				0
/* SMD_CONFIG */
#define ICM_SMD_CONFIG_WOM_INT_MODE				3
#define ICM_SMD_CONFIG_WOM_MODE					2
#define ICM_SMD_CONFIG_SMD_MODE					0
/* FIFO_CONFIG1 */
#define ICM_FIFO_CONFIG1_FIFO_RESUME_PARTIAL_RD	6
#define ICM_FIFO_CONFIG1_FIFO_WM_GT_TH			5
#define ICM_FIFO_CONFIG1_FIFO_HIRES_EN			4
#define ICM_FIFO_CONFIG1_FIFO_TMST_FSYNC_EN		3
#define ICM_FIFO_CONFIG1_FIFO_TEMP_EN			2
#define ICM_FIFO_CONFIG1_FIFO_GYRO_EN			1
#define ICM_FIFO_CONFIG1_FIFO_ACCEL_EN			0
/* FSYNC_CONFIG */
#define ICM_FSYNC_CONFIG_FSYNC_UI_SEL			4
#define ICM_FSYNC_CONFIG_FSYNC_UI_FLAG_CLEAR_SEL 1
#define ICM_FSYNC_CONFIG_FSYNC_POLARITY			0
/* INT_CONFIG0 */
#define ICM_INT_CONFIG0_UI_DRDY_INT_CLEAR		4
#define ICM_INT_CONFIG0_FIFO_THS_INT_CLEAR		2
#define ICM_INT_CONFIG0_FIFO_FULL_INT_CLEAR		0
/* INT_CONFIG1 */
#define ICM_INT_CONFIG1_INT_TPULSE_DURATION		6
#define ICM_INT_CONFIG1_INT_TDEASSERT_DISABLE	5
#define ICM_INT_CONFIG1_INT_ASYNC_RESET			4
/* INT_SOURCE0 */
#define ICM_INT_SOURCE0_UI_FSYNC_INT1_EN		6
#define ICM_INT_SOURCE0_PLL_RDY_INT1_EN			5
#define ICM_INT_SOURCE0_RESET_DONE_INT1_EN		4
#define ICM_INT_SOURCE0_UI_DRDY_INT1_EN			3
#define ICM_INT_SOURCE0_FIFO_THS_INT1_EN		2
#define ICM_INT_SOURCE0_FIFO_FULL_INT1_EN		1
#define ICM_INT_SOURCE0_UI_AGC_RDY_INT1_EN		0
/* INT_SOURCE1 */
#define ICM_INT_SOURCE1_I3C_PROTOCOL_ERROR_INT1_EN	6
#define ICM_INT_SOURCE1_SMD_INT1_EN				3
#define ICM_INT_SOURCE1_WOM_Z_INT1_EN			2
#define ICM_INT_SOURCE1_WOM_Y_INT1_EN			1
#define ICM_INT_SOURCE1_WOM_X_INT1_EN			0
/* INT_SOURCE3 */
#define ICM_INT_SOURCE3_UI_FSYNC_INT1_EN		6
#define ICM_INT_SOURCE3_PLL_RDY_INT1_EN			5
#define ICM_INT_SOURCE3_RESET_DONE_INT1_EN		4
#define ICM_INT_SOURCE3_UI_DRDY_INT1_EN			3
#define ICM_INT_SOURCE3_FIFO_THS_INT1_EN		2
#define ICM_INT_SOURCE3_FIFO_FULL_INT1_EN		1
#define ICM_INT_SOURCE3_UI_AGC_RDY_INT1_EN		0
/* INT_SOURCE4 */
#define ICM_INT_SOURCE4_I3C_PROTOCOL_ERROR_INT1_EN	6
#define ICM_INT_SOURCE4_SMD_INT1_EN				3
#define ICM_INT_SOURCE4_WOM_Z_INT1_EN			2
#define ICM_INT_SOURCE4_WOM_Y_INT1_EN			1
#define ICM_INT_SOURCE4_WOM_X_INT1_EN			0

/* SENSOR_CONFIG0 */
#define ICM_SENSOR_CONFIG0_ZG_DISABLE			5
#define ICM_SENSOR_CONFIG0_YG_DISABLE			4
#define ICM_SENSOR_CONFIG0_XG_DISABLE			3
#define ICM_SENSOR_CONFIG0_ZA_DISABLE			2
#define ICM_SENSOR_CONFIG0_YA_DISABLE			1
#define ICM_SENSOR_CONFIG0_XA_DISABLE			0
/* GYRO_CONFIG_STATIC2 */
#define ICM_GYRO_CONFIG_STATIC2_GYRO_AAF_DIS	1
#define ICM_GYRO_CONFIG_STATIC2_GYRO_NF_DIS		0
/* GYRO_CONFIG_STATIC5 */
#define ICM_GYRO_CONFIG_STATIC5_GYRO_AAF_BITSHIFT	4
#define ICM_GYRO_CONFIG_STATIC5_GYRO_AAF_DELTSQR	0




typedef enum __SPI_MODE
{
	SPI_MODE_0_3 = 0<<ICM_DEVICE_CONFIG_SPI_MODE,
	SPI_MODE_1_2 = 1<<ICM_DEVICE_CONFIG_SPI_MODE
} ICM42688_SPI_MODE_t;

typedef enum __SLEW_RATE
{
	SLEW_RATE_20NS_60NS = 0b000,
	SLEW_RATE_12NS_36NS = 0b001,
	SLEW_RATE_6NS_18NS = 0b010,
	SLEW_RATE_4NS_12NS = 0b011,
	SLEW_RATE_2NS_6NS = 0b100,
	SLEW_RATE_LESS_THAN_2NS = 0b101
} ICM42688_SLEW_RATE_t;

typedef enum __INT_MODE
{
	PULSED_MODE = 0<<ICM_INT_CONFIG_INT1_MODE,
	LATCHED_MODE = 1<<ICM_INT_CONFIG_INT1_MODE
} ICM42688_INT_MODE_t;

typedef enum __INT_DRIVE_CIRCUIT
{
	OPEN_DRAIN = 0<<ICM_INT_CONFIG_INT1_DRIVE_CIRCUIT,
	PUSH_PULL = 1<<ICM_INT_CONFIG_INT1_DRIVE_CIRCUIT
} ICM42688_INT_DRIVE_CIRCUIT_t;

typedef enum __INT_POLARITY
{
	ACTIVE_LOW = 0<<ICM_INT_CONFIG_INT1_POLARITY,
	ACTIVE_HIGH = 1<<ICM_INT_CONFIG_INT1_POLARITY
} ICM42688_INT_POLARITY_t;

typedef enum __TEMP_DIS
{
	TEMP_SENS_ENABLE =  0<<ICM_PWR_MGMT0_TEMP_DIS,
	TEMP_SENS_DISABLE = 1<<ICM_PWR_MGMT0_TEMP_DIS
} ICM_TEMP_DIS_t;

typedef enum __IDLE
{
	IDLE_MODE_DISABLE = 1<<ICM_PWR_MGMT0_IDLE,
	IDLE_MODE_ENABLE =  0<<ICM_PWR_MGMT0_IDLE
} ICM_IDLE_t;

typedef enum __GYRO_MODE
{
	GYRO_OFF_MODE = 	  0b00<<ICM_PWR_MGMT0_GYRO_MODE,
	GYRO_STANDBY_MODE = 0b01<<ICM_PWR_MGMT0_GYRO_MODE,
	GYRO_LN_MODE = 	  0b11<<ICM_PWR_MGMT0_GYRO_MODE
} ICM42688_GYRO_MODE_t;

typedef enum __ACCEL_MODE
{
	ACCEL_OFF_MODE = 		0b00<<ICM_PWR_MGMT0_ACCEL_MODE,
	ACCEL_STANDBY_MODE = 	0b01<<ICM_PWR_MGMT0_ACCEL_MODE,
	ACCEL_LP_MODE = 		0b10<<ICM_PWR_MGMT0_ACCEL_MODE,
	ACCEL_LN_MODE = 		0b11<<ICM_PWR_MGMT0_ACCEL_MODE
} ICM42688_ACCEL_MODE_t;

typedef enum __GYRO_FS_SEL
{
	GYRO_FS_SEL_2000DPS = 	0b000<<5,
	GYRO_FS_SEL_1000DPS = 	0b001<<5,
	GYRO_FS_SEL_500DPS = 	0b010<<5,
	GYRO_FS_SEL_250DPS = 	0b011<<5,
	GYRO_FS_SEL_125DPS = 	0b100<<5,
	GYRO_FS_SEL_62p5DPS = 	0b101<<5,
	GYRO_FS_SEL_31p25DPS = 0b110<<5,
	GYRO_FS_SEL_15p625DPS = 0b111<<5
} ICM42688_GYRO_FS_SEL_t;

#define GYRO_2000DPS_COEF	2000./32768.
#define GYRO_1000DPS_COEF	1000./32768.
#define GYRO_500DPS_COEF	500./32768.
#define GYRO_250DPS_COEF	250./32768.

typedef enum __GYRO_ODR
{
	GYRO_ODR_32KHZ = 	0b0001<<0,
	GYRO_ODR_16KHZ = 	0b0010<<0,
	GYRO_ODR_8KHZ = 	0b0011<<0,
	GYRO_ODR_4KHZ = 	0b0100<<0,
	GYRO_ODR_2KHZ = 	0b0101<<0,
	GYRO_ODR_1KHZ = 	0b0110<<0,
	GYRO_ODR_200HZ = 	0b0111<<0,
	GYRO_ODR_100HZ = 	0b1000<<0,
	GYRO_ODR_50HZ = 	0b1001<<0,
	GYRO_ODR_25HZ = 	0b1010<<0,
	GYRO_ODR_12p5HZ = 	0b1011<<0,
	GYRO_ODR_500HZ = 	0b1111<<0
} ICM42688_GYRO_ODR_t;

typedef enum __ACCEL_FS_SEL
{
	ACCEL_FS_SEL_16G = 	0b000<<5,
	ACCEL_FS_SEL_8G = 	0b001<<5,
	ACCEL_FS_SEL_4G = 	0b010<<5,
	ACCEL_FS_SEL_2G = 	0b011<<5
} ICM42688_ACCEL_FS_SEL_t;

#define ACCEL_16G_COEF	16./32768
#define ACCEL_8G_COEF	8./32768
#define ACCEL_4G_COEF	4./32768
#define ACCEL_2G_COEF	2./32768

typedef enum __ACCEL_ODR
{
	ACCEL_ODR_32KHZ = 	0b0001<<0,
	ACCEL_ODR_16KHZ = 	0b0010<<0,
	ACCEL_ODR_8KHZ = 	0b0011<<0,
	ACCEL_ODR_4KHZ = 	0b0100<<0,
	ACCEL_ODR_2KHZ = 	0b0101<<0,
	ACCEL_ODR_1KHZ = 	0b0110<<0,
	ACCEL_ODR_200HZ = 	0b0111<<0,
	ACCEL_ODR_100HZ = 	0b1000<<0,
	ACCEL_ODR_50HZ = 	0b1001<<0,
	ACCEL_ODR_25HZ = 	0b1010<<0,
	ACCEL_ODR_12p5HZ = 	0b1011<<0,
	ACCEL_ODR_6p25HZ = 	0b1100<<0,
	ACCEL_ODR_3p125HZ = 0b1101<<0,
	ACCEL_ODR_1p5625HZ = 0b1110<<0,
	ACCEL_ODR_500HZ = 	0b1111<<0
} ICM42688_ACCEL_ODR_t;

typedef enum __TEMP_FILT_BW
{
	DLPF_BW_4000HZ_LATENCY_0p125MS = 0b000<<5,
	DLPF_BW_170HZ_LATENCY_1MS = 	0b001<<5,
	DLPF_BW_82HZ_LATENCY_2MS = 		0b010<<5,
	DLPF_BW_40HZ_LATENCY_4MS = 		0b011<<5,
	DLPF_BW_20HZ_LATENCY_8MS = 		0b100<<5,
	DLPF_BW_10HZ_LATENCY_16MS = 	0b101<<5,
	DLPF_BW_5HZ_LATENCY_32MS = 		0b110<<5
} ICM42688_TEMP_FILT_BW_t;

typedef enum __GYRO_UI_FILT_ORD
{
	GYRO_UI_FILT_1ST_ORDER = 		0b00<<2,
	GYRO_UI_FILT_2ND_ORDER = 		0b01<<2,
	GYRO_UI_FILT_3RD_ORDER = 		0b10<<2,
	GYRO_UI_FILT_RESERVED = 		0b11<<2
} ICM42688_GYRO_UI_FILT_ORD_t;

typedef enum __GYRO_DEC2_M2_ORD
{
	GYRO_DEC2_M2_FILT_RESERVED = 	0b00<<0,
	GYRO_DEC2_M2_FILT_3RD_ORDER = 	0b10<<0
} ICM42688_GYRO_DEC2_M2_ORD_t;

typedef enum __ACCEL_UI_FILT_BW
{
	/* LN-mode */
	ACCEL_BW_ODR_DIV2 = 			0<<4,
	ACCEL_BW_MAX_400HZ_ODR_DIV4 = 	1<<4,
	ACCEL_BW_MAX_400HZ_ODR_DIV5 = 	2<<4,
	ACCEL_BW_MAX_400HZ_ODR_DIV8 = 	3<<4,
	ACCEL_BW_MAX_400HZ_ODR_DIV10 = 	4<<4,
	ACCEL_BW_MAX_400HZ_ODR_DIV16 = 	5<<4,
	ACCEL_BW_MAX_400HZ_ODR_DIV20 = 	6<<4,
	ACCEL_BW_MAX_400HZ_ODR_DIV40 = 	7<<4,
	ACCEL_BW_MAX_400HZ_ODR_DIV2 = 	14<<4,
	ACCEL_BW_MAX_200HZ_8xODR_DIV2 = 15<<4,
	/* LP-mode */
	ACCEL_BW_1X_AVG_FILTER = 		1<<4,
	ACCEL_BW_16X_AVG_FILTER = 		6<<4,
	/* Default */
	ACCEL_BW_DEFAULT = 				1<<4
} ICM42688_ACCEL_UI_FILT_BW_t;

typedef enum __GYRO_UI_FILT_BW
{
	/* LN-mode */
	GYRO_BW_ODR_DIV2 = 				0<<0,
	GYRO_BW_MAX_400HZ_ODR_DIV4 = 	1<<0,
	GYRO_BW_MAX_400HZ_ODR_DIV5 = 	2<<0,
	GYRO_BW_MAX_400HZ_ODR_DIV8 = 	3<<0,
	GYRO_BW_MAX_400HZ_ODR_DIV10 = 	4<<0,
	GYRO_BW_MAX_400HZ_ODR_DIV16 = 	5<<0,
	GYRO_BW_MAX_400HZ_ODR_DIV20 = 	6<<0,
	GYRO_BW_MAX_400HZ_ODR_DIV40 = 	7<<0,
	GYRO_BW_MAX_400HZ_ODR_DIV2 = 	14<<0,
	GYRO_BW_MAX_200HZ_8xODR_DIV2 = 	15<<0,
	/* Default */
	GYRO_BW_DEFAULT = 				1
} ICM42688_GYRO_UI_FILT_BW_t;

typedef enum __ACCEL_UI_FILT_ORD
{
	ACCEL_UI_FILT_1ST_ORDER = 		0b00<<3,
	ACCEL_UI_FILT_2ND_ORDER = 		0b01<<3,
	ACCEL_UI_FILT_3RD_ORDER = 		0b10<<3
} ICM42688_ACCEL_UI_FILT_ORD_t;

typedef enum __ACCEL_DEC2_M2_ORD
{
	ACCEL_DEC2_M2_RESERVED =		0b00<<1,
	ACCEL_DEC2_M2_3RD_ORDER = 		0b10<<1
} ICM42688_ACCEL_DEC2_M2_ORD_t;

typedef enum __TMST_TO_REGS_EN
{
	TMST_TO_REGS_DISABLE = 0,
	TMST_TO_REGS_ENABLE = 1,
} ICM42688_TMST_TO_REGS_EN_t;

typedef enum __TMST_RES
{
	TMST_RES_1US = 		0<<3,
	TMST_RES_16US = 	1<<3,
	TMST_RES_RTC = 		1<<3,
	TMST_RES_DEFAULT = 	0<<3
} ICM42688_TMST_RES_t;

typedef enum __TMST_MODE
{
	TMST_DELTA_EN = 1<<ICM_TMST_CONFIG_TMST_DELTA_EN,
	TMST_FSYNC_EN = 1<<ICM_TMST_CONFIG_TMST_FSYNC_EN
} ICM42688_TMST_MODE_t;

typedef enum __TMST_EN
{
	TMST_ENABLE = 1<<ICM_TMST_CONFIG_TMST_EN,
	TMST_DISABLE = 0<<ICM_TMST_CONFIG_TMST_EN
} ICM42688_TMST_EN_t;

typedef enum __DMP_ENABLE
{
	DMP_DISABLE = 0,
	DMP_ENABLE = 1
} ICM42688_DMP_POWER_SAVE_t;

typedef enum __DMP_FLAGS
{
	DMP_TAP_ENABLE = 1<<ICM_APEX_CONFIG0_TAP_ENABLE,
	DMP_PED_ENABLE = 1<<ICM_APEX_CONFIG0_PED_ENABLE,
	DMP_TILT_ENABLE = 1<<ICM_APEX_CONFIG0_TILT_ENABLE,
	DMP_R2W_ENABLE = 1<<ICM_APEX_CONFIG0_R2W_ENABLE
} ICM42688_DMP_FLAGS_t;

typedef enum __DMP_ODR
{
	DMP_ODR_25HZ = 0b00,
	DMP_ODR_50HZ = 0b10
} ICM42688_DMP_ODR_t;

typedef enum __SMD_MODE
{
	SMD_DISABLED = 0b00<<ICM_SMD_CONFIG_SMD_MODE,
	SMD_SHORT = 0b10<<ICM_SMD_CONFIG_SMD_MODE,
	SMD_LONG = 0b11<<ICM_SMD_CONFIG_SMD_MODE
} ICM42688_SMD_MODE_t;

typedef enum __WOM_INT_MODE
{
	THE_OR_OF_ENABLED_ACCELS = 0<<ICM_SMD_CONFIG_WOM_INT_MODE,
	THE_AND_OF_ENABLED_ACCELS = 1<<ICM_SMD_CONFIG_WOM_INT_MODE
} ICM42688_WOM_INT_MODE_t;

typedef enum __WOM_MODE
{
	COMPARE_WITH_INITIAL_SAMPLE = 0<<ICM_SMD_CONFIG_WOM_MODE,
	COMPARE_WITH_PREVIOUS_SAMPLE = 1<<ICM_SMD_CONFIG_WOM_MODE
} ICM42688_WOM_MODE_t;

typedef enum __IRQ
{
	UI_FSYNC_IRQ = 1<<ICM_INT_SOURCE0_UI_FSYNC_INT1_EN,
	PLL_RDY_IRQ = 1<<ICM_INT_SOURCE0_PLL_RDY_INT1_EN,
	RESET_DONE_IRQ = 1<<ICM_INT_SOURCE0_RESET_DONE_INT1_EN,
	UI_DRDY_IRQ = 1<<ICM_INT_CONFIG0_UI_DRDY_INT_CLEAR,
	FIFO_THS_IRQ = 1<<ICM_INT_SOURCE0_FIFO_THS_INT1_EN,
	FIFO_FULL_IRQ = 1<<ICM_INT_SOURCE0_FIFO_FULL_INT1_EN,
	UI_AGC_RDY_IRQ = 1<<ICM_INT_SOURCE0_UI_AGC_RDY_INT1_EN,
	I3C_PROTOCOL_ERR_IRQ = 1<<(8+ICM_INT_SOURCE1_I3C_PROTOCOL_ERROR_INT1_EN),
	SMD_IRQ = 1<<(8+ICM_INT_SOURCE1_SMD_INT1_EN),
	WOM_Z_IRQ = 1<<(8+ICM_INT_SOURCE1_WOM_Z_INT1_EN),
	WOM_Y_IRQ = 1<<(8+ICM_INT_SOURCE1_WOM_Y_INT1_EN),
	WOM_X_IRQ = 1<<(8+ICM_INT_SOURCE1_WOM_X_INT1_EN)
} ICM42688_INT_REQUEST_t;

typedef enum __ACCEL_ENABLE
{
	ENABLE_XA = 1<<0,
	ENABLE_YA = 1<<1,
	ENABLE_ZA = 1<<2,
} ICM42688_ACCEL_ENABLE_t;

typedef enum __GYRO_ENABLE
{
	ENABLE_XG = 1<<0,
	ENABLE_YG = 1<<1,
	ENABLE_ZG = 1<<2,
} ICM42688_GYRO_ENABLE_t;

typedef enum 
{
	DRDY_INT_CLEAR_ON_STATUS_BIT_READ = 0b00<<ICM_INT_CONFIG0_UI_DRDY_INT_CLEAR,
	DRDY_INT_CLEAR_ON_SENSOR_REG_READ = 0b10<<ICM_INT_CONFIG0_UI_DRDY_INT_CLEAR,
	DRDY_INT_CLEAR_ON_STATUS_BIT_AND_SENSOR_REG_READ = 0b11<<ICM_INT_CONFIG0_UI_DRDY_INT_CLEAR,
} ICM42688_UI_DRDY_INT_CLEAR_t;

typedef enum
{
	FIFO_THS_INT_CLEAR_ON_STATUS_BIT_READ = 0b00<<ICM_INT_CONFIG0_FIFO_THS_INT_CLEAR,
	FIFO_THS_INT_CLEAR_ON_SENSOR_REG_READ = 0b10<<ICM_INT_CONFIG0_FIFO_THS_INT_CLEAR,
	FIFO_THS_INT_CLEAR_ON_STATUS_BIT_AND_SENSOR_REG_READ = 0b11<<ICM_INT_CONFIG0_FIFO_THS_INT_CLEAR,
} ICM42688_FIFO_THS_INT_CLEAR_t;

typedef enum
{
	FIFO_FULL_INT_CLEAR_ON_STATUS_BIT_READ = 0b00<<ICM_INT_CONFIG0_FIFO_FULL_INT_CLEAR,
	FIFO_FULL_INT_CLEAR_ON_SENSOR_REG_READ = 0b10<<ICM_INT_CONFIG0_FIFO_FULL_INT_CLEAR,
	FIFO_FULL_INT_CLEAR_ON_STATUS_BIT_AND_SENSOR_REG_READ = 0b11<<ICM_INT_CONFIG0_FIFO_FULL_INT_CLEAR,
} ICM42688_FIFO_FULL_INT_CLEAR_t;

typedef enum {
	INT_TPULSE_100US = 0<<ICM_INT_CONFIG1_INT_TPULSE_DURATION,
	INT_TPULSE_8US = 1<<ICM_INT_CONFIG1_INT_TPULSE_DURATION,
} ICM42688_INT_TPULSE_DURATION_t;

typedef enum {
	INT_TDEASSERT_ENABLE = 0<<ICM_INT_CONFIG1_INT_TDEASSERT_DISABLE,
	INT_TDEASSERT_DISABLE = 1<<ICM_INT_CONFIG1_INT_TDEASSERT_DISABLE,
} ICM42688_INT_TDEASSERT_DISABLE_t;

typedef enum {
	INT2_PULSED_MODE = 0<<ICM_INT_CONFIG_INT2_MODE,
	INT2_LATCHED_MODE = 1<<ICM_INT_CONFIG_INT2_MODE,
} ICM42688_INT2_MODE_t;

typedef enum {
	INT2_OPEN_DRAIN = 0<<ICM_INT_CONFIG_INT2_DRIVE_CIRCUIT,
	INT2_PUSH_PULL = 1<<ICM_INT_CONFIG_INT2_DRIVE_CIRCUIT,
} ICM42688_INT2_DRIVE_CIRCUIT_t;

typedef enum {
	INT2_ACTIVE_LOW = 0<<ICM_INT_CONFIG_INT2_POLARITY,
	INT2_ACTIVE_HIGH = 1<<ICM_INT_CONFIG_INT2_POLARITY,
} ICM42688_INT2_POLARITY_t;

typedef enum {
	INT1_PULSED_MODE = 0<<ICM_INT_CONFIG_INT1_MODE,
	INT1_LATCHED_MODE = 1<<ICM_INT_CONFIG_INT1_MODE,
} ICM42688_INT1_MODE_t;

typedef enum {
	INT1_OPEN_DRAIN = 0<<ICM_INT_CONFIG_INT1_DRIVE_CIRCUIT,
	INT1_PUSH_PULL = 1<<ICM_INT_CONFIG_INT1_DRIVE_CIRCUIT,
} ICM42688_INT1_DRIVE_CIRCUIT_t;

typedef enum {
	INT1_ACTIVE_LOW = 0<<ICM_INT_CONFIG_INT1_POLARITY,
	INT1_ACTIVE_HIGH = 1<<ICM_INT_CONFIG_INT1_POLARITY,
} ICM42688_INT1_POLARITY_t;

typedef enum {
	FIFO_BYPASS_MODE = 0b00<<ICM_FIFO_CONFIG_FIFO_MODE,
	FIFO_STREAM_MODE = 0b01<<ICM_FIFO_CONFIG_FIFO_MODE,
	FIFO_STOP_ON_FULL_MODE = 0b10<<ICM_FIFO_CONFIG_FIFO_MODE,
} ICM42688_FIFO_MODE_t;